@function rem($px) {
  @return $px / $rhythm-base-font-size * 1rem;
}

@function em($v) {
  @return $v * 1em;
}

@mixin letter-spacing($value) {
  letter-spacing: $value / 1000 * 1em;
}

@mixin __($entity, $value) {
  @if $entity == mt {@include margin-leader($value);}
  @if $entity == mb {@include margin-trailer($value);}
  @if $entity == pt {@include padding-leader($value);}
  @if $entity == pb {@include padding-trailer($value);}
}

@mixin vertical-rhythm-helpers($lines: 3, $parts: (0, 0.25, 0.5, 0.75)) {
  @each $bpName, $px in $grid-breakpoints {
    $bp: if($bpName == xs, '', '#{$bpName}-');

    @include media-breakpoint-up($bpName) {
      $entities: (mt, mb, pt, pb);
      @each $entity in $entities {
        .#{$entity} { /**/
          @for $i from 0 through $lines {
            @each $part in $parts {
              $value: #{str-replace(#{$i + $part}, '.', '\\.')};

              //@if ($part != 0 and $i == 0) {
              //  $value: '#{$value}';
              //}

              &-#{$bp}#{$value} { @include __($entity, $i + $part); }
            }
          }
        }
      }
    }
  }
}

@mixin zero-first-last-margins() {
  &:first-child { margin-top: 0; }
  &:last-child { margin-bottom: 0; }
}

@mixin type-margin() {
  @include margin-trailer(1);
  &:last-child { margin-bottom: 0; }
}

@mixin reset-list() {
  margin: 0;
  padding: 0;
  list-style: none;
}
